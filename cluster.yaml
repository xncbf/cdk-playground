apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: rcs
  region: ap-northeast-2

iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: rcs
      namespace: rcs-app
      labels: {aws-usage: "application"}
    attachPolicyARNs:
    - "arn:aws:iam::925517469638:policy/AmazonEKSClusterPodsPolicy"
  - metadata:
      name: rcs-stage
      namespace: rcs-app-stage
      labels: {aws-usage: "application"}
    attachPolicyARNs:
    - "arn:aws:iam::925517469638:policy/AmazonEKSClusterPodsPolicy"
  - metadata:
      name: rcs-dev
      namespace: rcs-app-dev
      labels: {aws-usage: "application"}
    attachPolicyARNs:
    - "arn:aws:iam::925517469638:policy/AmazonEKSClusterPodsPolicy"
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
    attachRoleARN: "arn:aws:iam::925517469638:role/AmazonEKSClusterAutoscalerRole"
    attachPolicyARNs:
    - "arn:aws:iam::925517469638:policy/AmazonEKSClusterAutoscalerPolicy"
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    attachRoleARN: "arn:aws:iam::925517469638:role/AmazonEKSLoadBalancerControllerRole"
    attachPolicyARNs:
    - "arn:aws:iam::925517469638:policy/AWSLoadBalancerControllerIAMPolicy"
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    attachRoleARN: "arn:aws:iam::925517469638:role/AmazonEKS_EBS_CSI_DriverRole"
    attachPolicyARNs:
    - "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"

vpc:
  id: "vpc-7d6cc414"
  securityGroup: "sg-0e53286f6090c9930"
  subnets:
    public:
      ap-northeast-2a: {id: subnet-ef04ae86}
      ap-northeast-2c: {id: subnet-89e217c4}
    private:
      ap-northeast-2a: {id: subnet-06ec67e561756d7c0}
      ap-northeast-2b: {id: subnet-02062889999b1ea3d}
      ap-northeast-2c: {id: subnet-06990378050340147}

managedNodeGroups:
  - name: harmony-ng
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      withAddonPolicies:
        autoScaler: true
    minSize: 2
    maxSize: 10
    labels: { harmony: true }
    instanceType: m6i.xlarge
    amiFamily: AmazonLinux2
    desiredCapacity: 2
    # volumeSize: 20
    privateNetworking: true
    subnets:
      - subnet-0faf6de5af8237787
      - subnet-02ddfb782ce49fff7

  - name: rcs-ng1
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      withAddonPolicies:
        autoScaler: true
    minSize: 2
    maxSize: 10
    labels: { rcs: true }
    instanceType: m6i.xlarge
    amiFamily: AmazonLinux2
    desiredCapacity: 2
    # volumeSize: 20
    privateNetworking: true
    subnets:
      - subnet-06ec67e561756d7c0
      - subnet-06990378050340147
