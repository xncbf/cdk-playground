apiVersion: apps/v1
kind: Deployment
metadata:
  name: rcs-chatbot
  namespace: rcs-app
spec:
  replicas: 2
  selector:
    matchLabels:
      run: rcs-chatbot
  template:
    metadata:
      labels:
        run: rcs-chatbot
    spec:
      serviceAccountName: rcs
      containers:
      - name: rcs-chatbot
        image: 925517469638.dkr.ecr.ap-northeast-2.amazonaws.com/rcs-chatbot:prod-47808
        imagePullPolicy: Always
        command: ["/bin/bash"]
        args: ["-c", "pipenv run python manage.py migrate && pipenv run gunicorn core.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:80"]
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 512m
          requests:
            cpu: 256m
---
apiVersion: v1
kind: Service
metadata:
  name: rcs-chatbot
  namespace: rcs-app
  labels:
    run: rcs-chatbot
spec:
  type: NodePort
  # externalName: rcs-chatbot.rcs-app.svc.cluster.local
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    run: rcs-chatbot

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: rcs-app
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:925517469638:certificate/9ec939ed-b23c-4ff9-9c92-6e106844e468
    alb.ingress.kubernetes.io/ssl-redirect: '443'
spec:
  ingressClassName: alb
  rules:
  - host: "chat-api1.harmonymsg.com"
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rcs-chatbot
            port:
              number: 80
---
 apiVersion: autoscaling/v1
 kind: HorizontalPodAutoscaler
 metadata:
   name: rcs-chatbot
   namespace: rcs-app
 spec:
   maxReplicas: 3
   minReplicas: 2
   targetCPUUtilizationPercentage: 50
   scaleTargetRef:
     apiVersion: apps/v1
     kind: Deployment
     name: rcs-chatbot
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rcs-chatbot-vpa
  namespace: rcs-app-dev
spec:
  # recommenders field can be unset when using the default recommender.
  # When using an alternative recommender, the alternative recommender's name
  # can be specified as the following in a list.
  # recommenders: 
  #   - name: 'alternative'
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: rcs-chatbot
  resourcePolicy:
    containerPolicies:
      - containerName: '*'
        minAllowed:
          cpu: 100m
          memory: 50Mi
        maxAllowed:
          cpu: 1
          memory: 500Mi
        controlledResources: ["cpu", "memory"]
---